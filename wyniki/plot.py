
wyniki = [
    [(-85000, 85), (-52000, 52), (-45000, 45), (-45000, 45), (-45000, 45), (-45000, 45), (-45000, 45), (-45000, 45), (-45000, 45), (-45000, 45), (-45000, 45), (-45000, 45), (-45000, 45), (-26000, 26), (-17001, 17), (-17000, 17), (-17000, 17), (-17000, 17), (-17000, 17), (-17000, 17), (-17000, 17), (-17000, 17), (-17000, 17), (-17000, 17), (-17000, 17), (-17000, 17), (-17000, 17), (-17000, 17), (-17000, 17), (-17000, 17), (-17000, 17), (-17000, 17), (-17000, 17), (-17000, 17), (-17000, 17), (-17000, 17), (-17000, 17), (-17000, 17), (-17000, 17), (-17000, 17), (-17000, 17), (-17000, 17), (-17000, 17), (-17000, 17), (-17000, 17), (-17000, 17), (-17000, 17), (-17000, 17), (-17000, 17), (-4004, 4)],

    [(-54, 13), (-52, 13), (-50, 13), (-48, 13), (-46, 13), (-46, 13), (-44, 13), (-44, 13), (-42, 13), (-40, 13), (-38, 13), (-38, 13), (-36, 13), (-36, 13), (-32, 10), (-30, 10), (-30, 10), (-30, 10), (-30, 10), (-30, 10), (-30, 10), (-28, 10), (-28, 10), (-28, 10), (-26, 10), (-24, 10), (-24, 10), (-24, 10), (-22, 10), (-22, 10), (-22, 10), (-22, 10), (-20, 10), (-20, 10), (-20, 10), (-20, 10), (-20, 10), (-20, 10), (-20, 10), (-18, 10), (-18, 10), (-18, 10), (-18, 10), (-16, 10), (-16, 10), (-16, 10), (-16, 10), (-16, 10), (-16, 10), (-16, 10)],
    [(-1845.0, 37), (10.0, 1), (18.0, 1), (26.0, 1), (10083.0, 0), (10085.0, 0), (10087.0, 0), (10091.0, 0), (10091.0, 0), (10095.0, 0), (10097.0, 0), (10099.0, 0), (10101.0, 0), (10103.0, 0), (10103.0, 0), (10105.0, 0), (10105.0, 0), (10110.0, 0), (10114.0, 0), (10119.0, 0), (10119.0, 0), (10123.0, 0), (10127.0, 0), (10127.0, 0), (10127.0, 0), (10131.0, 0), (10131.0, 0), (10131.0, 0), (10135.0, 0), (10135.0, 0), (10135.0, 0), (10135.0, 0), (10135.0, 0), (10135.0, 0), (10135.0, 0), (10135.0, 0), (10135.0, 0), (10135.0, 0), (10135.0, 0), (10139.0, 0), (10139.0, 0), (10139.0, 0), (10139.0, 0), (10139.0, 0), (10139.0, 0), (10139.0, 0), (10139.0, 0), (10139.0, 0), (10139.0, 0), (10139.0, 0)],
    [(-578018, 578), (-545013, 545), (-545008, 545), (-545005, 545), (-545003, 545), (-545000, 545), (-545000, 545), (-545000, 545), (-545000, 545), (-545000, 545), (-545000, 545), (-545000, 545), (-545000, 545), (-545000, 545), (-545000, 545), (-545000, 545), (-545000, 545), (-545000, 545), (-545000, 545), (-545000, 545), (-545000, 545), (-545000, 545), (-545000, 545), (-545000, 545), (-545000, 545), (-545000, 545), (-545000, 545), (-545000, 545), (-545000, 545), (-545000, 545), (-545000, 545), (-545000, 545), (-545000, 545), (-545000, 545), (-545000, 545), (-545000, 545), (-545000, 545), (-545000, 545), (-545000, 545), (-545000, 545), (-545000, 545), (-545000, 545), (-545000, 545), (-545000, 545), (-545000, 545), (-545000, 545), (-545000, 545), (-545000, 545), (-545000, 545), (-545000, 545)],
    [(-648, 648), (-648, 648), (-648, 648), (-648, 648), (-648, 648), (-648, 648), (-648, 648), (-648, 648), (-648, 648), (-648, 648), (-648, 648), (-648, 648), (-648, 648), (-648, 648), (-648, 648), (-648, 648), (-648, 648), (-648, 648), (-648, 648), (-648, 648), (-613, 613), (-613, 613), (-613, 613), (-613, 613), (-613, 613), (-613, 613), (-613, 613), (-613, 613), (-613, 613), (-613, 613), (-613, 613), (-578, 578), (-578, 578), (-578, 578), (-578, 578), (-578, 578), (-578, 578), (-578, 578), (-578, 578), (-578, 578), (-578, 578), (-578, 578), (-578, 578), (-578, 578), (-578, 578), (-578, 578), (-578, 578), (-578, 578), (-578, 578), (-578, 578)],
    [(-364, 178), (-364, 178), (-360, 178), (-358, 178), (-352, 173), (-350, 173), (-346, 173), (-342, 173), (-338, 173), (-332, 173), (-330, 173), (-326, 173), (-324, 173), (-324, 173), (-320, 173), (-318, 173), (-316, 173), (-314, 173), (-314, 173), (-312, 173), (-310, 173), (-308, 173), (-306, 173), (-306, 173), (-306, 173), (-304, 173), (-304, 173), (-302, 173), (-302, 173), (-300, 173), (-298, 173), (-298, 173), (-296, 173), (-294, 173), (-294, 173), (-292, 173), (-292, 173), (-288, 173), (-286, 173), (-284, 173), (-284, 173), (-282, 173), (-280, 173), (-278, 173), (-276, 173), (-276, 173), (-276, 173), (-274, 173), (-274, 173), (-274, 173)],
    [(-11624.0, 229), (-8828.0, 173), (-8812.0, 173), (-4191.0, 81), (-4179.0, 81), (-4179.0, 81), (-4173.0, 81), (-4160.0, 81), (-4153.0, 81), (-4152.0, 81), (-4141.0, 81), (-4141.0, 81), (-4133.0, 81), (-4129.0, 81), (-4125.0, 81), (-4121.0, 81), (-4117.0, 81), (-4109.0, 81), (-4105.0, 81), (-4092.0, 81), (-4088.0, 81), (-4080.0, 81), (-4072.0, 81), (-4072.0, 81), (-4072.0, 81), (-4068.0, 81), (-4068.0, 81), (-4060.0, 81), (-4060.0, 81), (-4052.0, 81), (-4048.0, 81), (-4044.0, 81), (-4044.0, 81), (-4040.0, 81), (-4036.0, 81), (-4032.0, 81), (-4032.0, 81), (-4032.0, 81), (-4024.0, 81), (-4024.0, 81), (-4024.0, 81), (-4020.0, 81), (-4020.0, 81), (-4020.0, 81), (-4020.0, 81), (-4016.0, 81), (-4016.0, 81), (-4012.0, 81), (-4012.0, 81), (-4008.0, 81)],
    [(-2594222, 2594), (-2594211, 2594), (-2521246, 2521), (-2521214, 2521), (-2521202, 2521), (-2521193, 2521), (-2521180, 2521), (-2521176, 2521), (-2521173, 2521), (-2521167, 2521), (-2521162, 2521), (-2521158, 2521), (-2521154, 2521), (-2521152, 2521), (-2521149, 2521), (-2521147, 2521), (-2521144, 2521), (-2521142, 2521), (-2521139, 2521), (-2521138, 2521), (-2521134, 2521), (-2521132, 2521), (-2521130, 2521), (-2521128, 2521), (-2521122, 2521), (-2521121, 2521), (-2521118, 2521), (-2521117, 2521), (-2521115, 2521), (-2521114, 2521), (-2521112, 2521), (-2521110, 2521), (-2521108, 2521), (-2521106, 2521), (-2521103, 2521), (-2521101, 2521), (-2521099, 2521), (-2521097, 2521), (-2521095, 2521), (-2521093, 2521), (-2521091, 2521), (-2521089, 2521), (-2521088, 2521), (-2521085, 2521), (-2521084, 2521), (-2521081, 2521), (-2521078, 2521), (-2521075, 2521), (-2521074, 2521), (-2521072, 2521)],
    [(-2740, 2740), (-2740, 2740), (-2740, 2740), (-2740, 2740), (-2740, 2740), (-2740, 2740), (-2740, 2740), (-2740, 2740), (-2740, 2740), (-2740, 2740), (-2740, 2740), (-2740, 2740), (-2740, 2740), (-2740, 2740), (-2740, 2740), (-2740, 2740), (-2740, 2740), (-2740, 2740), (-2740, 2740), (-2669, 2669), (-2669, 2669), (-2669, 2669), (-2669, 2669), (-2669, 2669), (-2669, 2669), (-2669, 2669), (-2669, 2669), (-2669, 2669), (-2669, 2669), (-2669, 2669), (-2669, 2669), (-2669, 2669), (-2669, 2669), (-2669, 2669), (-2669, 2669), (-2669, 2669), (-2669, 2669), (-2669, 2669), (-2669, 2669), (-2594, 2594), (-2594, 2594), (-2594, 2594), (-2594, 2594), (-2594, 2594), (-2594, 2594), (-2594, 2594), (-2594, 2594), (-2594, 2594), (-2594, 2594), (-2533, 2533)],
    [(-1810, 1000), (-1460, 650), (-1382, 605), (-1380, 605), (-1376, 605), (-1336, 565), (-1332, 565), (-1326, 565), (-1322, 565), (-1318, 565), (-1314, 565), (-1310, 565), (-1304, 565), (-1300, 565), (-1292, 565), (-1282, 565), (-1276, 565), (-1276, 565), (-1272, 565), (-1266, 565), (-1262, 565), (-1258, 565), (-1256, 565), (-1252, 565), (-1248, 565), (-1244, 565), (-1240, 565), (-1234, 565), (-1230, 565), (-1226, 565), (-1226, 565), (-1224, 565), (-1222, 565), (-1218, 565), (-1214, 565), (-1214, 565), (-1212, 565), (-1208, 565), (-1204, 565), (-1202, 565), (-1198, 565), (-1196, 565), (-1192, 565), (-1190, 565), (-1188, 565), (-1184, 565), (-1182, 565), (-1178, 565), (-1174, 565), (-1172, 565)],
    [(-38391.0, 745), (-38388.0, 745), (-30645.0, 592), (-30599.0, 592), (-30547.0, 592), (-30527.0, 592), (-30222.0, 585), (-30188.0, 585), (-30167.0, 585), (-30152.0, 585), (-30140.0, 585), (-30140.0, 585), (-30136.0, 585), (-30128.0, 585), (-30124.0, 585), (-30112.0, 585), (-29876.0, 580), (-29848.0, 580), (-29844.0, 580), (-29836.0, 580), (-29832.0, 580), (-29694.0, 577), (-29672.0, 577), (-29668.0, 577), (-29664.0, 577), (-29656.0, 577), (-29651.0, 577), (-29644.0, 577), (-29636.0, 577), (-29635.0, 577), (-29627.0, 577), (-29623.0, 577), (-29619.0, 577), (-29610.0, 577), (-29602.0, 577), (-29598.0, 577), (-29593.0, 577), (-29589.0, 577), (-29578.0, 577), (-29574.0, 577), (-29569.0, 577), (-29562.0, 577), (-29558.0, 577), (-29550.0, 577), (-29546.0, 577), (-29538.0, 577), (-29534.0, 577), (-29529.0, 577), (-29525.0, 577), (-29521.0, 577)],
    [(-6290639, 6290), (-5850653, 5850), (-5850624, 5850), (-5850608, 5850), (-5850596, 5850), (-5850590, 5850), (-5850585, 5850), (-5850573, 5850), (-5850571, 5850), (-5850569, 5850), (-5850567, 5850), (-5850564, 5850), (-5850561, 5850), (-5850559, 5850), (-5850556, 5850), (-5850554, 5850), (-5850551, 5850), (-5850546, 5850), (-5850545, 5850), (-5850543, 5850), (-5850540, 5850), (-5850539, 5850), (-5850537, 5850), (-5850535, 5850), (-5850533, 5850), (-5850531, 5850), (-5850528, 5850), (-5850526, 5850), (-5850524, 5850), (-5850523, 5850), (-5850518, 5850), (-5850516, 5850), (-5850513, 5850), (-5850510, 5850), (-5850509, 5850), (-5850508, 5850), (-5850506, 5850), (-5850504, 5850), (-5850502, 5850), (-5850500, 5850), (-5850497, 5850), (-5850496, 5850), (-5850493, 5850), (-5850490, 5850), (-5850488, 5850), (-5850486, 5850), (-5850484, 5850), (-5850481, 5850), (-5850478, 5850), (-5850477, 5850)],
    [(-6613, 6613), (-6613, 6613), (-6613, 6613), (-6613, 6613), (-6613, 6613), (-6613, 6613), (-6613, 6613), (-6613, 6613), (-6613, 6613), (-6613, 6613), (-6613, 6613), (-6613, 6613), (-6613, 6613), (-6613, 6613), (-6613, 6613), (-6613, 6613), (-6613, 6613), (-6613, 6613), (-6613, 6613), (-6613, 6613), (-6613, 6613), (-6613, 6613), (-6613, 6613), (-6613, 6613), (-6613, 6613), (-6613, 6613), (-6613, 6613), (-6613, 6613), (-6613, 6613), (-6613, 6613), (-6613, 6613), (-6613, 6613), (-6613, 6613), (-6613, 6613), (-6613, 6613), (-6613, 6613), (-6613, 6613), (-6613, 6613), (-6613, 6613), (-6613, 6613), (-6613, 6613), (-6613, 6613), (-6613, 6613), (-6613, 6613), (-6613, 6613), (-6613, 6613), (-6613, 6613), (-6613, 6613), (-6613, 6613), (-6613, 6613)],
    [(-4974, 3177), (-4864, 3042), (-4842, 3042), (-4772, 2977), (-4744, 2977), (-4736, 2977), (-4726, 2977), (-4708, 2977), (-4690, 2977), (-4676, 2977), (-4672, 2977), (-4662, 2977), (-4658, 2977), (-4654, 2977), (-4646, 2977), (-4642, 2977), (-4634, 2977), (-4626, 2977), (-4618, 2977), (-4610, 2977), (-4606, 2977), (-4594, 2977), (-4588, 2977), (-4582, 2977), (-4578, 2977), (-4570, 2977), (-4560, 2977), (-4556, 2977), (-4552, 2977), (-4548, 2977), (-4540, 2977), (-4536, 2977), (-4530, 2977), (-4526, 2977), (-4518, 2977), (-4518, 2977), (-4514, 2977), (-4508, 2977), (-4504, 2977), (-4500, 2977), (-4494, 2977), (-4490, 2977), (-4486, 2977), (-4480, 2977), (-4478, 2977), (-4472, 2977), (-4468, 2977), (-4458, 2977), (-4456, 2977), (-4446, 2977)],
    [(-172154.0, 3380), (-157724.0, 3092), (-151721.0, 2977), (-151717.0, 2977), (-151673.0, 2977), (-151673.0, 2977), (-151641.0, 2977), (-151621.0, 2977), (-123848.0, 2425), (-106971.0, 2088), (-93030.0, 1810), (-83781.0, 1625), (-83739.0, 1625), (-83715.0, 1625), (-83707.0, 1625), (-83695.0, 1625), (-83687.0, 1625), (-83679.0, 1625), (-83663.0, 1625), (-83647.0, 1625), (-70789.0, 1369), (-70764.0, 1369), (-70743.0, 1369), (-70739.0, 1369), (-70715.0, 1369), (-54285.0, 1040), (-54253.0, 1040), (-54239.0, 1040), (-54233.0, 1040), (-51476.0, 985), (-51471.0, 985), (-51456.0, 985), (-51448.0, 985), (-51428.0, 985), (-51420.0, 985), (-51414.0, 985), (-51398.0, 985), (-51378.0, 985), (-51366.0, 985), (-51358.0, 985), (-51353.0, 985), (-51341.0, 985), (-51333.0, 985), (-51325.0, 985), (-51317.0, 985), (-51308.0, 985), (-51296.0, 985), (-51291.0, 985), (-51284.0, 985), (-51276.0, 985)],
    ]


import matplotlib.pyplot as plt


fig, ax = plt.subplots(2, 2)

# opisy osi i wykresu

for (i, name) in zip(range(4), ['11', '21', '41', '61']):
    ax[i//2][i%2].set(xlabel='Generacje')
    ax[i//2][i%2].set(title=name)
    ax[i//2][i%2].plot([x[1] for x in wyniki[i * 4]], 'b-', fillstyle='none')
    ax[i//2][i%2].plot([x[1] for x in wyniki[i * 4 + 1]], 'g-', fillstyle='none')
    ax[i//2][i%2].plot([x[1] for x in wyniki[i * 4 + 2]], 'c-', fillstyle='none')
    ax[i//2][i%2].plot([x[1] for x in wyniki[i * 4 + 3]], 'r-', fillstyle='none')

fig.tight_layout()
fig.subplots_adjust(right=0.85)

fig.legend(['fit_binary', 'collision_ends', 'collision_stuns', 'collision_smart'], loc=7)



plt.show()
